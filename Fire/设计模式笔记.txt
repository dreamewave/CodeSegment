原则：
1.分离变化的和不变的
2.面向接口编程而不是面向实现编程
理解：“针对接口编程”真正意思是“针对超类型编程”。组合时引用类型使用超类型，具体实现类可以动态绑定上去。
3.多用组合少用继承
理解：继承的目的是为了可以复用父类的代码(编译时静态决定)。但是利用组合和委托扩展对象行为可以在运行时具有继承的效果
4.交互对象之间松耦合
5.对扩展开放,对修改关闭


设计目标：弹性，可维护，复用

问题：
1.子类N1，N2，N3.....继承父类C，N1，N2，N3.....要增加相同方法时要全部修改
2.新需求需要增加新类(新功能)
3.一个对象如何执行特定操作？
   1）.调用定义在类内部的方法。2）.组合引入第三方类，委托执行（这个具体的第三方对象可以是动态绑定（涉及到接口），也可以是写固定）
4.对某个对象变化感兴趣？如何在该对象改变是及时得到通知？
  观察者模式，注册成为观察者

  